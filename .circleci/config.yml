version: 2.1

commands:
  setup-bazel:
    description:
      Set up Bazel build system
    steps:
      - run:
          name: Add Bazel Apt repository
          command: |
            sudo apt install curl gnupg
            curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
            sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
      - run:
          name: Install Bazel from Apt
          command: sudo apt update && sudo apt install bazel-5.2.0 && sudo ln -s /usr/bin/bazel-5.2.0 /usr/bin/bazel
  circleci-glob:
    description:
      Define test suite
    steps:
      - run:
          name: Define Test Suite
          command: |
            echo $(circleci tests split --split-by=timings)
            echo $(circleci tests glob "$HOME/project/**/test/**/*.java" | cut -d "project/" -f2 | circleci tests split --split-by=timings)
  collect-test-xml:
    description:
      Collect all test.xml after running test all for documentation
    steps:
      - run:
          name: Collect test log
          command: |
            chmod +x $HOME/project/scripts/prepare_test_log.sh
            mkdir $HOME/tests
            sh -c $HOME/project/scripts/prepare_test_log.sh

executors:
  docker-executor:
    docker:
      - image: cimg/openjdk:11.0.19

jobs:
  test:
    docker:
      - image: cimg/openjdk:11.0.19
    resource_class: small
    parallelism: 2
    steps:
      - checkout
      - setup-bazel
      - circleci-glob
      - run:
          name: Run tests
          command: |
            export XML_OUTPUT_FILE=$HOME/tests
            bazel test --strategy=KotlinCompile=worker --test_output=errors //... # Depending on your Bazel package and target
# TODO: temporarily removing log until finding out how to parallel test with Bazel
      - collect-test-xml
      - store_test_results:
          path: ~/tests/
  build:
    docker:
      - image: cimg/openjdk:11.0.19
    resource_class: small
    parallelism: 2
    steps:
      - checkout
      - setup-bazel
      - run:
          name: Run build
          command: bazel build //... # Depending on your Bazel package and target

workflows:
  build-and-test:
    jobs:
      - test
      - build
